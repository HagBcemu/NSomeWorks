// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NSomeWorks;

namespace NSomeWorks.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230117225642_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("NSomeWorks.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1973, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Gabin.comercial@gmail.com",
                            InstagramUrl = "www.instagram.com/ifty/",
                            Name = "Gabin",
                            Phone = "054678546"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1980, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Londobeat.comercial@gmail.com",
                            InstagramUrl = "www.instagram.com/t",
                            Name = "Londobeat",
                            Phone = "47645624"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1993, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Panik.comercial@gmail.com",
                            InstagramUrl = "www.instagram.com/ftshty/",
                            Name = "Panik",
                            Phone = "6544231234"
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1988, 3, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Radioheat.comercial@gmail.com",
                            InstagramUrl = "www.instagram.com/git",
                            Name = "Radioheat",
                            Phone = "2321165778"
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1974, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Arabesque.comercial@gmail.com",
                            InstagramUrl = "www.instagram.com/gfty/",
                            Name = "Arabesque",
                            Phone = "445221265"
                        });
                });

            modelBuilder.Entity("NSomeWorks.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Jazz"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Funk"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Reaggae"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Latin"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Metal"
                        });
                });

            modelBuilder.Entity("NSomeWorks.Model.ArtistSong", b =>
                {
                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("ArtistId", "SongId");

                    b.HasIndex("SongId");

                    b.ToTable("ArtistSong");

                    b.HasData(
                        new
                        {
                            ArtistId = 1,
                            SongId = 1
                        },
                        new
                        {
                            ArtistId = 1,
                            SongId = 2
                        },
                        new
                        {
                            ArtistId = 1,
                            SongId = 3
                        },
                        new
                        {
                            ArtistId = 2,
                            SongId = 3
                        },
                        new
                        {
                            ArtistId = 2,
                            SongId = 5
                        },
                        new
                        {
                            ArtistId = 3,
                            SongId = 2
                        },
                        new
                        {
                            ArtistId = 3,
                            SongId = 4
                        },
                        new
                        {
                            ArtistId = 3,
                            SongId = 3
                        },
                        new
                        {
                            ArtistId = 4,
                            SongId = 1
                        },
                        new
                        {
                            ArtistId = 4,
                            SongId = 4
                        },
                        new
                        {
                            ArtistId = 4,
                            SongId = 5
                        },
                        new
                        {
                            ArtistId = 5,
                            SongId = 4
                        },
                        new
                        {
                            ArtistId = 5,
                            SongId = 1
                        });
                });

            modelBuilder.Entity("NSomeWorks.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleasedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Duration = 3.5,
                            GenreId = 1,
                            ReleasedDate = new DateTime(2003, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Gabin"
                        },
                        new
                        {
                            Id = 2,
                            Duration = 7.2999999999999998,
                            GenreId = 2,
                            ReleasedDate = new DateTime(1999, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Blinding Lights"
                        },
                        new
                        {
                            Id = 3,
                            Duration = 4.2000000000000002,
                            GenreId = 3,
                            ReleasedDate = new DateTime(2003, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Balenciaga"
                        },
                        new
                        {
                            Id = 4,
                            Duration = 1.8,
                            GenreId = 4,
                            ReleasedDate = new DateTime(2004, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Roses"
                        },
                        new
                        {
                            Id = 5,
                            Duration = 3.7000000000000002,
                            GenreId = 5,
                            ReleasedDate = new DateTime(2007, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Beliver"
                        });
                });

            modelBuilder.Entity("NSomeWorks.Model.ArtistSong", b =>
                {
                    b.HasOne("NSomeWorks.Artist", "Artist")
                        .WithMany("ArtistSong")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NSomeWorks.Song", "Song")
                        .WithMany("ArtistSong")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("NSomeWorks.Song", b =>
                {
                    b.HasOne("NSomeWorks.Genre", "Genre")
                        .WithMany("Songs")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("NSomeWorks.Artist", b =>
                {
                    b.Navigation("ArtistSong");
                });

            modelBuilder.Entity("NSomeWorks.Genre", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("NSomeWorks.Song", b =>
                {
                    b.Navigation("ArtistSong");
                });
#pragma warning restore 612, 618
        }
    }
}
